[{"/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/index.js":"1","/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/reportWebVitals.js":"2","/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/App.js":"3","/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/components/Signup.js":"4","/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/components/Signin.js":"5"},{"size":455,"mtime":1638365460385,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1638297066981,"results":"8","hashOfConfig":"7"},{"size":1408,"mtime":1638352934641,"results":"9","hashOfConfig":"7"},{"size":1582,"mtime":1638726368159,"results":"10","hashOfConfig":"7"},{"size":2147,"mtime":1638553794492,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"krazgu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/index.js",[],["24","25"],"/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/reportWebVitals.js",[],"/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/App.js",[],"/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/components/Signup.js",["26"],"/Users/amaurygimonnet/Documents/GitHub/SiteElect/client/src/components/Signin.js",["27"],"import React, { Component } from \"react\";\nimport axios from 'axios';\n\nexport default class Signin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n      }\n\n    // componentDidMount() {\n    //     axios.post(`https://localhost:3000/user/login`, {email: email, password: password})\n    //         .then(res => {\n    //         console.log(res.body);\n    //     })\n    // }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const {email, password} = this.state\n\n        \n\n    axios.post('http://localhost:3000/user/login', {email, password})\n      .then(res => console.log(res.data));\n    }\n\n    render() {\n        const {email, password} = this.state\n        return (\n            <form onSubmit={this.onSubmit}>\n                <h3>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input name='email' className=\"form-control\" placeholder=\"Enter email\" value={email} onChange={this.onChange}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" name='password' className=\"form-control\" placeholder=\"Enter password\" value={password} onChange={this.onChange}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n                <br/>\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                <br/>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n            </form>\n        );\n    }\n}",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":48,"column":40,"nodeType":"34","endLine":48,"endColumn":52},{"ruleId":"32","severity":1,"message":"33","line":62,"column":28,"nodeType":"34","endLine":62,"endColumn":40},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]